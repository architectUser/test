1.在Es5中，RegExp构造函数的参数有两种情况
（1）参数是字符串，这时第二个参数表示正则表达式的修饰符（flag）
var regex = new RegExp（'xyz', 'i'）;
//等价于
var regex = /xyz/i;
(2)参数是一个正则表示式，这时会返回一个原有正则表达式的拷贝。
var regex = new RegExp(/xyz/i);
等价于
var regex = /xyxz/i;
注意：es5不允许此时使用第二个参数添加修饰符，否则会报错
var regex = new RegExp(/xyz/, 'i');
如果RegExp构造函数第一个函数是一个正则对象，那么可以使用第二个参数指定修饰符。而且，返回的正则表达式会忽略原有表达式的修饰符，只使用新指定的修饰符。
new RegExp（/abc/ig, 'i'）.flags
// i
上面的代码中，原有正则的对象修饰符ig,它会被第二个参数i覆盖
2.match（）,replace(),search(),split()
3.u修饰符(es新增)
用来正确处理大于\uFFFF的Unicode字符。
/^\uD83D/u.test('\uD83D\uDC2A') //false
/^\uD83D/.test('\uD83D\uDC2A') //true
点字符
Unicode字符表示法
量词
预定义模式
i修饰符
4.y修饰符(粘连sticky)修饰符(es新增)
y与g的区别：两者都是全局匹配，后一次匹配都从上一次匹配成功的下一个位置开始。不同之处在于，
g修饰符只要剩余位置中存在匹配就行，而y修饰符会确保匹配必须从剩余的第一个位置开始，这就是
“粘连”的含义
